{
    "version": 3,
    "sources": ["webpack:///./node_modules/lottie-web/build/player/lottie_light.js"],
    "names": ["__WEBPACK_AMD_DEFINE_RESULT__", "root", "navigator", "window", "undefined", "expressionsPlugin", "svgNS", "locationHref", "initialDefaultFrame", "subframeEnabled", "bm_pow", "test", "userAgent", "Math", "round", "pow", "bm_sqrt", "sqrt", "bm_floor", "abs", "floor", "bm_min", "max", "min", "BMMath", "i", "propertyNames", "len", "length", "random", "val", "tOfVal", "absArr", "createSizedArray", "defaultCurveSegments", "degToRads", "PI", "roundCorner", 
    "roundValues", "flag", "BMEnterFrameEvent", "n", "c", "t", "d", "this", "type", "currentTime", "totalTime", "direction", "BMCompleteEvent", "BMCompleteLoopEvent", "currentLoop", "totalLoops", "BMSegmentStartEvent", "f", "firstFrame", "totalFrames", "BMDestroyEvent", "target", "_count", "createElementID", "HSVtoRGB", "h", "s", "v", "r", "g", "b", "p", "q", "RGBtoHSV", "addSaturationToRGB", "color", "offset", "hsv", "addBrightnessToRGB", "addHueToRGB", "rgbToHex", "hex", "colorMap", "toString", "BaseEvent", "prototype", "triggerEvent", "eventName", "args", "_cbs", "addEventListener", "callback", "push", "removeEventListener", "bind", "splice", "createTypedArray", "Uint8ClampedArray", "Float32Array", "Int16Array", "value", "arr", "Array", "apply", "createNS", "document", "createElementNS", "createTag", "createElement", "DynamicPropertyContainer", "addDynamicProperty", "prop", "dynamicProperties", "indexOf", "container", "_isAnimated", "iterateDynamicProperties", "_mdf", "getValue", "initDynamicPropertyContainer", "blendModeEnums", "getBlendMode", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "mode", "Matrix", "_cos", "cos", "_sin", "sin", "_tan", "tan", "_rnd", "reset", "props", "rotate", "angle", "mCos", "mSin", "_t", "rotateX", "rotateY", "rotateZ", "shear", "sx", "sy", "skew", "ax", "ay", "skewFromAxis", "scale", "sz", "setTransform", "a", "e", "j", "k", "l", "m", "o", "translate", "tx", "ty", "tz", "transform", "a2", "b2", "c2", "d2", "e2", "f2", "g2", "h2", "i2", "j2", "k2", "l2", "m2", "n2", "o2", "p2", "_p", "_identityCalculated", "a1", "b1", "c1", "d1", "e1", "f1", "g1", "h1", "i1", "j1", "k1", "l1", "m1", "n1", "o1", "p1", "isIdentity", "_identity", "equals", "matr", "clone", "cloneFromProps", "applyToPoint", "x", "y", "z", "applyToX", "applyToY", "applyToZ", "inversePoint", "pt", "determinant", "inversePoints", "pts", "retPts", "applyToTriplePoints", "pt1", "pt2", "pt3", "p0", "p4", "p5", "p12", "p13", "applyToPointArray", "applyToPointStringified", "toCSS", "cssValue", "roundMatrixProperty", "to2dCSS", "_a", "_b", "_c", "_d", "_e", "_f", "pool", "math", "nodecrypto", "global", "width", "chunks", "rngname", "startdenom", "significance", "overflow", "mask", "ARC4", "key", "keylen", "me", "S", "count", "copy", "slice", "flatten", "obj", "depth", "result", "typ", "mixkey", "seed", "smear", "stringseed", "charCodeAt", "tostring", "autoseed", "randomBytes", "out", "Uint8Array", "crypto", "msCrypto", "getRandomValues", "browser", "plugins", "Date", "screen", "String", "fromCharCode", "options", "shortseed", "entropy", "arc4", "prng", "int32", "quick", "double", "pass", "is_math_call", "state", "BezierFactory", "ob", "getBezierEasing", "nm", "str", "replace", "beziers", "bezEasing", "BezierEasing", "kSplineTableSize", "kSampleStepSize", "float32ArraySupported", "A", "aA1", "aA2", "B", "C", "calcBezier", "aT", "getSlope", "points", "_mSampleValues", "_precomputed", "get", "mX1", "mY1", "mX2", "mY2", "_precompute", "_getTForX", "_calcSampleValues", "aX", "mSampleValues", "intervalStart", "currentSample", "lastSample", "dist", "guessForT", "initialSlope", "aGuessT", "currentSlope", "currentX", "newtonRaphsonIterate", "aA", "aB", "currentT", "binarySubdivide", "extendPrototype", "sources", "destination", "sourcePrototype", "attr", "hasOwnProperty", "lastTime", "vendors", "requestAnimationFrame", "cancelAnimationFrame", "element", "currTime", "getTime", "timeToCall", "id", "setTimeout", "clearTimeout", "bez", "pointOnLine2D", "x1", "y1", "x2", "y2", "x3", "y3", "det1", "pointOnLine3D", "z1", "z2", "z3", "diffDist", "dist1", "dist2", "dist3", "getBezierLength", "pt4", "ptCoord", "perc", "ptDistance", "curveSegments", "addedLength", "point", "lastPoint", "lengthData", "bezier_length_pool", "newElement", "percents", "lengths", "getSegmentsLength", "shapeData", "segmentsLength", "segments_length_pool", "closed", "pathV", "pathO", "pathI", "_length", "totalLength", "BezierData", "segmentLength", "PointData", "partial", "partialLength", "storedData", "buildBezierData", "keyData", "to", "ti", "bezierName", "bezierData", "getDistancePerc", "initPos", "lengthPos", "lPerc", "dir", "getPointInSegment", "percent", "t1", "u1", "ptX", "ptY", "bezier_segment_points", "getNewSegment", "startPerc", "endPerc", "t0", "u0", "u0u0u0", "t0u0u0_3", "t0t0u0_3", "t0t0t0", "u0u0u1", "t0u0u1_3", "t0t0u1_3", "t0t0t1", "u0u1u1", "t0u1u1_3", "t0t1u1_3", "t0t1t1", "u1u1u1", "t1u1u1_3", "t1t1u1_3", "t1t1t1", "bezFunction", "dataManager", "completeLayers", "layers", "comps", "fontManager", "layerData", "jLen", "kLen", "completed", "tt", "td", "hasMask", "maskProps", "masksProperties", "convertPathsToAbsoluteValues", "findCompLayers", "refId", "completeShapes", "shapes", "completeText", "__used", "JSON", "parse", "stringify", "ks", "it", "path", "checkVersion", "minimum", "animVersionString", "animVersion", "split", "minimumVersion", "checkText", "iterateLayers", "textLayer", "documentData", "animationData", "assets", "checkChars", "chars", "pathData", "paths", "data", "__converted", "checkColors", "iterateShapes", "checkShapes", "cl", "completeData", "__complete", "singleShape", "moduleOb", "dataFunctionManager", "FontManager", "emptyChar", "w", "size", "combinedCharacters", "setUpNode", "font", "family", "parentNode", "style", "fontFamily", "node", "innerHTML", "position", "left", "top", "fontSize", "fontVariant", "fontStyle", "fontWeight", "letterSpacing", "appendChild", "body", "offsetWidth", "parent", "concat", "Font", "fonts", "typekitLoaded", "isLoaded", "initTime", "now", "getCombinedCharacterCodes", "addChars", "found", "fFamily", "ch", "addFonts", "fontData", "defs", "list", "def", "tHelper", "fontArr", "_pendingFonts", "loadedSelector", "shouldLoadFont", "loaded", "monoCase", "sansCase", "fPath", "fOrigin", "origin", "querySelectorAll", "setAttribute", "href", "rel", "src", "sc", "helper", "fStyle", "fWeight", "textContent", "fClass", "getContext", "cache", "checkLoadedFonts", "getCharData", "char", "console", "warn", "getFontByName", "name", "fName", "measureText", "fontName", "index", "doubleSize", "getComputedTextLength", "singleSize", "loadedCount", "removeChild", "PropertyFactory", "initFrame", "math_abs", "interpolateValue", "frameNum", "caching", "newValue", "offsetTime", "propType", "pv", "nextKeyData", "fnc", "iterationIndex", "lastIndex", "keyframes", "quat", "qx", "qy", "qz", "qw", "heading", "attitude", "bank", "omega", "cosom", "sinom", "scale0", "scale1", "az", "aw", "bx", "by", "bz", "bw", "nextKeyTime", "keyTime", "ind", "__fnct", "segmentPerc", "distanceInLine", "lastFrame", "_lastBezierData", "_lastAddedLength", "_lastPoint", "outX", "outY", "inX", "inY", "keyValue", "sh", "quatStart", "createQuaternion", "quatEnd", "time", "acos", "atan2", "asin", "constructor", "values", "c3", "s1", "s2", "s3", "getValueAtCurrentTime", "comp", "renderedFrame", "endTime", "_caching", "renderResult", "setVValue", "multipliedValue", "mult", "processEffectsSequence", "elem", "globalData", "frameId", "effectsSequence", "lock", "_isFirstFrame", "finalValue", "kf", "addEffect", "effectFunction", "ValueProperty", "vel", "MultiDimensionalProperty", "KeyframedValueProperty", "st", "KeyframedMultidimensionalProperty", "arrLen", "getProp", "TransformPropertyFactory", "TransformProperty", "pre", "appliedTransformations", "px", "py", "pz", "rx", "ry", "rz", "or", "sk", "sa", "_isDirty", "applyToMatrix", "mat", "forceRender", "precalculateMatrix", "autoOriented", "v1", "v2", "frameRate", "getValueAtTime", "autoOrient", "_addDynamicProperty", "getTransformProperty", "ShapePath", "_maxLength", "setPathData", "setLength", "point_pool", "doubleArrayLength", "setXYAt", "pos", "setTripleAt", "vX", "vY", "oX", "oY", "iX", "iY", "reverse", "newPath", "vertices", "outPoints", "inPoints", "init", "cnt", "modifiers", "ShapePropertyFactory", "interpolateShape", "previousValue", "keyPropS", "keyPropE", "isHold", "vertexValue", "resetShape", "localShapeCollection", "shape1", "shape2", "shapesEqual", "shape_pool", "releaseShapes", "addShape", "ShapeProperty", "shapeCollection_pool", "newShapeCollection", "KeyframedShapeProperty", "EllShapeProperty", "cPoint", "convertEllToPath", "s0", "_cw", "_v", "StarShapeProperty", "ir", "is", "convertToPath", "convertStarToPath", "convertPolygonToPath", "os", "rad", "roundness", "perimSegment", "numPts", "longFlag", "longRad", "shortRad", "longRound", "shortRound", "longPerimSegment", "shortPerimSegment", "currentAng", "ox", "oy", "RectShapeProperty", "convertRectToPath", "v0", "getShapeProp", "dataProp", "keys", "getConstructorFunction", "getKeyframedConstructorFunction", "ShapeModifiers", "registerModifier", "factory", "getModifier", "ShapeModifier", "TrimModifier", "RoundCornersModifier", "RepeaterModifier", "ShapeCollection", "DashProperty", "renderer", "dataProps", "dashStr", "dashArray", "dashoffset", "GradientProperty", "cLength", "_cmdf", "_omdf", "_collapsable", "checkCollapsable", "_hasOpacity", "initModifierProperties", "addShapeToModifier", "shape", "setAsAnimated", "processKeys", "sValue", "eValue", "pathsData", "calculateShapeEdges", "shapeLength", "totalModifierLength", "segments", "segmentOb", "shapeSegments", "shapeS", "shapeE", "releasePathsData", "release", "processShapes", "shapePaths", "_s", "totalShapeLength", "edges", "newShapesData", "addShapes", "lastShapeInCollection", "lastShape", "pop", "addPaths", "newPaths", "addSegment", "shapePath", "newShape", "addSegmentFromArray", "shapeSegment", "currentLengthData", "segmentCount", "segment", "rd", "processPath", "cloned_path", "currentV", "currentI", "currentO", "closerV", "distance", "newPosPerc", "tr", "so", "eo", "pMatrix", "rMatrix", "sMatrix", "tMatrix", "matrix", "applyTransforms", "inv", "scaleX", "scaleY", "elemsData", "_currentCopies", "_elements", "_groups", "unshift", "resetElements", "elements", "_processed", "cloneElements", "newElements", "changeGroupRender", "renderFlag", "_render", "items", "itemsTransform", "cont", "copies", "ceil", "group", "ix", "reloadShapes", "offsetModulo", "roundOffset", "pProps", "rProps", "sProps", "iteration", "mProps", "op", "comparePoints", "buildShapeString", "pathNodes", "_o", "_i", "shapeString", "ImagePreloader", "proxyImage", "canvas", "height", "ctx", "fillStyle", "fillRect", "imageLoaded", "loadedAssets", "totalImages", "imagesLoadedCb", "createImageData", "assetData", "assetsPath", "original_path", "imagePath", "u", "getAssetsPath", "img", "crossOrigin", "_imageLoaded", "loadAssets", "cb", "images", "_createImageData", "setPath", "setAssetsPath", "getImage", "destroy", "featureSupport", "maskType", "filtersFactory", "createFilter", "filId", "fil", "createAlphaToLuminanceFilter", "feColorMatrix", "assetLoader", "formatResponse", "xhr", "response", "responseText", "load", "errorCallback", "XMLHttpRequest", "open", "responseType", "send", "onreadystatechange", "readyState", "status", "err", "TextAnimatorProperty", "textData", "renderType", "_hasMaskedPath", "_frameId", "_textData", "_renderType", "_elem", "_animatorsData", "_pathData", "_moreOptions", "alignment", "renderedLetters", "lettersChangedFlag", "TextAnimatorDataProperty", "animatorProps", "defaultData", "textAnimator_animatables", "sw", "fc", "fh", "fs", "fb", "TextSelectorProp", "getTextSelectorProp", "LetterProps", "TextProperty", "keysIndex", "canResize", "minimumFontSize", "currentData", "ascent", "boxWidth", "defaultBoxWidth", "justifyOffset", "lh", "lineWidths", "ls", "of", "ps", "fillColorAnim", "strokeColorAnim", "strokeWidthAnim", "yOffset", "finalSize", "finalText", "finalLineHeight", "copyData", "searchProperty", "completeTextData", "searchProperties", "maskManager", "getMaskProperty", "getMeasures", "xPos", "yPos", "pathInfo", "currentLength", "currentPoint", "pointInd", "segmentInd", "prevPoint", "tanAngle", "animators", "matrixHelper", "mHelper", "renderedLettersCount", "letters", "tLength", "pi", "animatorSelector", "letterValue", "yOff", "firstLine", "offf", "xPathPos", "yPathPos", "elemOpacity", "letterSw", "letterSc", "letterFc", "letterO", "initPathPos", "initSegmentInd", "initPointInd", "currentLine", "letterM", "letterP", "defaultPropsArray", "animatorJustifyOffset", "animatorFirstCharOffset", "justifyOffsetMult", "isNewLine", "getMult", "anIndexes", "totalChars", "line", "extra", "an", "animatorOffset", "add", "rot", "atan", "update", "updated", "setCurrentData", "searchKeyframes", "getKeyframeValue", "_finalValue", "currentValue", "currentIndex", "textKeys", "buildFinalText", "text", "charactersArray", "charAt", "newLineFlag", "charData", "anchorGrouping", "currentSize", "currentPos", "lineWidth", "maxLineWidth", "styles", "toLowerCase", "charCode", "trackingOffset", "currentHeight", "boxHeight", "lastSpaceIndex", "currentChar", "uncollapsedSpaces", "animatorData", "letterData", "based", "indexes", "rn", "newInd", "currentInd", "updateDocumentData", "newData", "dData", "recalculate", "canResizeFont", "_canResize", "setMinimumFontSize", "_fontValue", "_currentTextLength", "finalS", "finalE", "xe", "ne", "textProperty", "easer", "tot", "newCharsFlag", "divisor", "pool_factory", "initialLength", "_create", "_release", "_clone", "pooling", "cloned", "shapeCollection", "BaseRenderer", "SVGRenderer", "animationItem", "config", "svgElement", "maskElement", "layerElement", "renderConfig", "preserveAspectRatio", "imagePreserveAspectRatio", "progressiveLoad", "hideOnTransparent", "viewBoxOnly", "viewBoxSize", "className", "pendingElements", "destroyed", "rendererType", "MaskElement", "viewData", "solidPath", "rect", "expansor", "feMorph", "properties", "currentMasks", "layerId", "maskRef", "filterID", "expan", "lastPath", "lastOperator", "filterId", "lastRadius", "createLayerSolidPath", "invRect", "drawPath", "maskedElement", "addRenderableComponent", "HierarchyElement", "FrameElement", "TransformElement", "RenderableElement", "RenderableDOMElement", "ProcessedElement", "SVGStyleData", "level", "lvl", "hd", "pElem", "msElem", "SVGShapeData", "transformers", "caches", "lStr", "SVGTransformData", "SVGStrokeStyleData", "styleOb", "SVGFillStyleData", "SVGGradientFillStyleData", "initGradientData", "SVGGradientStrokeStyleData", "ShapeGroupData", "prevViewData", "gr", "checkLayers", "num", "ip", "buildItem", "checkPendingElements", "createItem", "layer", "createImage", "createComp", "createSolid", "createNull", "createShape", "createText", "createCamera", "Error", "buildAllItems", "includeLayers", "newLayers", "setProjectInterface", "pInterface", "projectInterface", "initItems", "buildElementParenting", "parentName", "hierarchy", "setAsParent", "setHierarchy", "addPendingElement", "searchExtraCompositions", "xt", "initExpressions", "registerComposition", "setupGlobalData", "animData", "fontsContainer", "getAssetData", "imageLoader", "imagePreloader", "fr", "compSize", "NullElement", "SVGShapeElement", "SVGTextElement", "IImageElement", "SVGCompElement", "ISolidElement", "configAnimation", "wrapper", "maskId", "updateContainerSize", "appendElementInPos", "setMatte", "checkParenting", "renderFrame", "currentFrame", "prepareFrame", "getBaseElement", "nextElement", "insertBefore", "hide", "display", "show", "isFirstFrame", "finalMat", "finalTransform", "mProp", "getMaskelement", "pathString", "pathShapeValue", "initHierarchy", "_isParent", "prepareProperties", "isVisible", "initTransform", "_matMdf", "_opMdf", "ao", "renderTransform", "globalToLocal", "transforms", "ptNew", "initRenderable", "isInRange", "hidden", "isTransparent", "renderableComponents", "component", "removeRenderableComponent", "prepareRenderableFrame", "checkLayerLimits", "checkTransparency", "renderRenderable", "sourceRectAtTime", "getLayerSize", "ProxyFunction", "createProxyFunction", "initElement", "initBaseData", "initRendererElement", "createContainerElements", "createRenderableComponents", "createContent", "baseElement", "renderElement", "renderInnerContent", "innerElem", "destroyBaseElement", "stops", "setGradientData", "setGradientOpacity", "pathElement", "gradientId", "gfill", "stop", "gf", "cst", "opacityId", "opFill", "ms", "ost", "SVGElementsRenderer", "_identityMatrix", "_matrixHelper", "createRenderFunction", "renderFill", "renderGradient", "renderGradientStroke", "renderStroke", "renderPath", "renderContentTransform", "styleData", "itemData", "pathStringTransformed", "redraw", "iterations", "lLen", "styleElem", "hasOpacity", "attr1", "attr2", "cValues", "oValues", "ang", "BaseElement", "SVGBaseElement", "IShapeElement", "ITextElement", "ICompElement", "sourceRect", "supports3d", "tm", "_placeholder", "textSpans", "shapesData", "stylesList", "shapeModifiers", "itemsData", "processedElements", "animatedContents", "SVGTintFilter", "filter", "filterManager", "matrixFilter", "effectElements", "feMergeNode", "feMerge", "SVGFillFilter", "SVGStrokeEffect", "initialized", "SVGTritoneFilter", "feComponentTransfer", "feFuncR", "feFuncG", "feFuncB", "SVGProLevelsFilter", "createFeFunc", "feFuncA", "feFuncRComposed", "feFuncGComposed", "feFuncBComposed", "SVGDropShadowEffect", "feGaussianBlur", "feOffset", "feFlood", "feComposite", "originalNodeAdded", "checkMasks", "layerInterface", "LayerExpressionInterface", "registerMaskInterface", "effectsInterface", "EffectsExpressionInterface", "createEffectsInterface", "registerEffectsInterface", "compInterface", "CompExpressionInterface", "shapeInterface", "ShapeExpressionInterface", "content", "textInterface", "TextExpressionInterface", "setBlendMode", "blendModeValue", "bm", "sr", "effectsManager", "EffectsManager", "getType", "matteElement", "transformedElement", "_sizeChanged", "gg", "layerElementParent", "masker", "maskGroup", "maskGrouper", "feCTr", "feFunc", "alphaRect", "ln", "cp", "clipId", "cpGroup", "renderableEffectsManager", "SVGEffects", "addShapeToModifiers", "isShapeInAnimatedModifiers", "isAnimatedWithShape", "renderModifiers", "lcEnum", "ljEnum", "searchProcessedElement", "addProcessedElement", "textAnimator", "buildNewText", "createPathShape", "shapeStr", "_fontSize", "applyTextPropertiesToMatrix", "lineNumber", "buildColor", "colorData", "emptyProp", "timeRemapped", "setElements", "elems", "getElements", "destroyElements", "assetPath", "pr", "setAttributeNS", "textContainer", "buildTextContents", "textArray", "textContents", "currentTextContent", "tSpan", "usesGlyphs", "cachedSpansLength", "tElement", "justify", "textBox", "getBBox", "bbox", "renderedLetter", "textSpan", "initSecondaryElement", "identityMatrix", "buildExpressionInterface", "searchShapes", "filterUniqueShapes", "tempShapes", "areAnimated", "setShapesAsAnimated", "createStyleElement", "elementData", "gradientConstructor", "lc", "lj", "ml", "addToAnimatedContents", "createGroupElement", "createTransformElement", "transformProperty", "createShapeElement", "ownTransformers", "shapeProperty", "fn", "setElementStyles", "render", "currentTransform", "modifier", "processedPos", "ownStyles", "ownModifiers", "renderShape", "animatedContent", "colorBlack", "colorWhite", "opacity", "initialize", "groupPath", "elemChildren", "children", "childNodes", "removeAttribute", "pathMasker", "dasharrayValue", "getTotalLength", "lineLength", "units", "color1", "color2", "color3", "tableR", "tableG", "tableB", "getTableValue", "inputBlack", "inputWhite", "gamma", "outputBlack", "outputWhite", "colorValue", "table", "call", "outputDelta", "inputDelta", "join", "col", "_svgMatteSymbols", "SVGMatte3Effect", "filterElem", "ef", "filters", "findSymbol", "replaceInParent", "symbolId", "nextChild", "useElem", "setElementAsMask", "symbol", "animationManager", "registeredAnimations", "playingAnimationsNum", "_stopped", "_isFrozen", "removeElement", "ev", "animItem", "animation", "isPaused", "subtractPlayingCount", "registerAnimation", "AnimationItem", "setupAnimation", "setData", "addPlayingCount", "activate", "resume", "nowTime", "elapsedTime", "advanceTime", "first", "loadAnimation", "params", "setParams", "setSpeed", "setDirection", "play", "pause", "togglePause", "searchAnimations", "standalone", "animElements", "getElementsByClassName", "getElementsByTagName", "div", "resize", "goToAndStop", "isFrame", "freeze", "unfreeze", "getRegisteredAnimations", "animations", "currentRawFrame", "frameMult", "playSpeed", "playDirection", "playCount", "autoplay", "loop", "animationID", "timeCompleted", "segmentPos", "_idle", "_completedLoop", "context", "animType", "CanvasRenderer", "rendererSettings", "HybridRenderer", "parseInt", "autoloadSegments", "substr", "lastIndexOf", "fileName", "trigger", "wrapperAttributes", "attributes", "getNamedItem", "prerender", "loadNextSegment", "shift", "segmentPath", "loadSegments", "imagesLoaded", "checkLoaded", "preloadImages", "updaFrameModifier", "waitForFontsLoaded", "gotoFrame", "setSubframe", "setCurrentRawFrameValue", "frameModifier", "goToAndPlay", "nextValue", "_isComplete", "checkSegments", "adjustSegment", "setSegment", "end", "pendingFrame", "playSegments", "forceFlag", "resetSegments", "onEnterFrame", "onLoopComplete", "onComplete", "onSegmentStart", "onDestroy", "getPath", "getDuration", "lottiejs", "setLocationHref", "setSubframeRendering", "setQuality", "isNaN", "inBrowser", "installPlugin", "plugin", "__getFactory", "version", "scripts", "myScript", "queryString", "variable", "vars", "pair", "decodeURIComponent", "getQueryVariable", "readyStateCheckInterval", "setInterval", "clearInterval", "exports", "__webpack_require__", "module"],
    "mappings": "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",
    "file": "js/vendors~lottie_animate.a76098a0dd73625bfc61.bundle.js",
    "sourcesContent": ["(typeof navigator !== \"undefined\") && (function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nvar createElementID = (function(){\r\n    var _count = 0;\r\n    return function createID() {\r\n        return '__lottie_element_' + ++_count\r\n    }\r\n}())\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\r\nvar getBlendMode = (function() {\r\n\r\n\tvar blendModeEnums = {\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    }\r\n\r\n\treturn function(mode) {\r\n\t\treturn blendModeEnums[mode] || '';\r\n\t}\r\n}())\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        if(!sz && sz !== 0) {\r\n            sz = 1;\r\n        }\r\n        if(sx === 1 && sy === 1 && sz === 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed && len){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n            var curveSegments = defaultCurveSegments;\r\n            var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for (k = 0; k < curveSegments; k += 1) {\r\n                point = createSizedArray(len);\r\n                perc = k / (curveSegments - 1);\r\n                ptDistance = 0;\r\n                for (i = 0; i < len; i += 1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n                ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance, point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(this.checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.isLoaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.setAttribute('class', fontData.fClass);\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.isLoaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.isLoaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        var _pendingFonts = len;\r\n        for(i=0; i<len; i+= 1){\r\n            var shouldLoadFont = true;\r\n            var loadedSelector;\r\n            var j;\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n                _pendingFonts -= 1;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+ fontArr[i].fFamily +'\"], style[f-origin=\"3\"][f-family=\"'+ fontArr[i].fFamily +'\"]');\r\n\r\n                if (loadedSelector.length > 0) {\r\n                    shouldLoadFont = false;\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var s = createTag('style');\r\n                    s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    s.setAttribute('f-origin', fontArr[i].origin);\r\n                    s.setAttribute('f-family', fontArr[i].fFamily);\r\n                    s.type = \"text/css\";\r\n                    s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                    defs.appendChild(s);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var l = createTag('link');\r\n                    l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    l.setAttribute('f-origin', fontArr[i].origin);\r\n                    l.type = \"text/css\";\r\n                    l.rel = \"stylesheet\";\r\n                    l.href = fontArr[i].fPath;\r\n                    document.body.appendChild(l);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (fontArr[i].fPath === loadedSelector[j].src) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var sc = createTag('link');\r\n                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    sc.setAttribute('f-origin', fontArr[i].origin);\r\n                    sc.setAttribute('rel','stylesheet');\r\n                    sc.setAttribute('href',fontArr[i].fPath);\r\n                    defs.appendChild(sc);\r\n                }\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        if (_pendingFonts === 0) {\r\n            this.isLoaded = true;\r\n        } else {\r\n            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n            //Adding this timeout seems to fix it\r\n           setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            if (char === ' ') {\r\n                tHelper.textContent = '|' + char + '|';\r\n                var doubleSize = tHelper.getComputedTextLength();\r\n                tHelper.textContent = '||';\r\n                var singleSize = tHelper.getComputedTextLength();\r\n                fontData.cache[index + 1] = (doubleSize - singleSize)/100;\r\n            } else {\r\n                tHelper.textContent = char;\r\n                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n            }\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.isLoaded;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.isLoaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\r\n    Font.prototype.loaded = loaded;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching) {\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if (this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length - 1, flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while (flag) {\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i + 1];\r\n            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if ((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if (i < len - 1){\r\n                i += 1;\r\n            } else {\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen, perc, jLen, j, fnc;\r\n        var nextKeyTime = nextKeyData.t - offsetTime;\r\n        var keyTime = keyData.t - offsetTime;\r\n        if (keyData.to) {\r\n            if (!keyData.bezierData) {\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for (k = 0; k < kLen; k += 1) {\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                // caching._lastBezierData = null;\r\n            } else {\r\n                if (keyData.__fnct) {\r\n                    fnc = keyData.__fnct;\r\n                } else {\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while (flag) {\r\n                    addedLength += bezierData.points[j].partialLength;\r\n                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (j < jLen - 1){\r\n                        j += 1;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        } else {\r\n            var outX, outY, inX, inY, keyValue;\r\n            len = keyData.s.length;\r\n            if (this.sh && keyData.h !== 1) {\r\n                if (frameNum >= nextKeyTime) {\r\n                    newValue[0] = keyData.e[0];\r\n                    newValue[1] = keyData.e[1];\r\n                    newValue[2] = keyData.e[2];\r\n                } else if (frameNum <= keyTime) {\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                } else {\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(keyData.e);\r\n                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i = 0; i < len; i += 1) {\r\n                    if (keyData.h !== 1) {\r\n                        if (frameNum >= nextKeyTime) {\r\n                            perc = 1;\r\n                        } else if(frameNum < keyTime) {\r\n                            perc = 0;\r\n                        } else {\r\n                            if(keyData.o.x.constructor === Array) {\r\n                                if (!keyData.__fnct) {\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = (typeof keyData.o.x[i] === undefined) ? keyData.o.x[0] : keyData.o.x[i];\r\n                                    outY = (typeof keyData.o.y[i] === undefined) ? keyData.o.y[0] : keyData.o.y[i];\r\n                                    inX = (typeof keyData.i.x[i] === undefined) ? keyData.i.x[0] : keyData.i.x[i];\r\n                                    inY = (typeof keyData.i.y[i] === undefined) ? keyData.i.y[0] : keyData.i.y[i];\r\n \r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));\r\n                        }\r\n                    }\r\n\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (keyData.e[i] - keyData.s[i]) * perc;\r\n\r\n                    if (len === 1) {\r\n                        newValue = keyValue;\r\n                    } else {\r\n                        newValue[i] = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            if(this._caching.lastFrame >= frameNum) {\r\n                this._caching._lastBezierData = null;\r\n                this._caching.lastIndex = 0;\r\n            }\r\n\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }        \r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastBezierData: null};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult, container);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult, container);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult, container);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult, container);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented) {\r\n                var v1,v2, frameRate = this.elem.globalData.frameRate;\r\n                if(this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n                    }\r\n                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n                    v1 = [];\r\n                    v2 = [];\r\n                    var px = this.px, py = this.py, frameRate;\r\n                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);\r\n                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                    } else {\r\n                        v1 = [px.pv, py.pv];\r\n                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);\r\n                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);\r\n                    }\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n        }\r\n        if(data.r) {\r\n            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\r\n        } else if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        if(data.a) {\r\n            this.a = PropertyFactory.getProp(elem,data.a,1,0,this);\r\n        }\r\n        if(data.s) {\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this);\r\n        }\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            if(kf[kf.length - 2].h === 1){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] \r\n            || shape1.v[i][1] !== shape2.v[i][1] \r\n            || shape1.o[i][0] !== shape2.o[i][0] \r\n            || shape1.o[i][1] !== shape2.o[i][1] \r\n            || shape1.i[i][0] !== shape2.i[i][0] \r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setVValue(newPath) {\r\n        if(!shapesEqual(this.v, newPath)) {\r\n            this.v = shape_pool.clone(newPath);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if(this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }\r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.setVValue = setVValue;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if(this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\r\n        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s * 10000) * 0.0001;\r\n        e = Math.round(e * 10000) * 0.0001;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n                            if (lastShapeInCollection.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n            //Don't remove this even if it's losing cached info.\r\n            this.shapes[i].pathsData.length = 0;\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c && lengths.length) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);\r\n    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(container);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\nfunction GradientProperty(elem,data,container){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(container);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\r\nvar ImagePreloader = (function(){\r\n\r\n    var proxyImage = (function(){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#FF0000';\r\n        ctx.fillRect(0, 0, 1, 1);\r\n        return canvas;\r\n    }())\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData, assetsPath, original_path) {\r\n        var path = '';\r\n        if (assetData.e) {\r\n            path = assetData.p;\r\n        } else if(assetsPath) {\r\n            var imagePath = assetData.p;\r\n            if (imagePath.indexOf('images/') !== -1) {\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = assetsPath + imagePath;\r\n        } else {\r\n            path = original_path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function createImageData(assetData) {\r\n        var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n        var img = createTag('img');\r\n        img.crossOrigin = 'anonymous';\r\n        img.addEventListener('load', this._imageLoaded.bind(this), false);\r\n        img.addEventListener('error', function() {\r\n            ob.img = proxyImage;\r\n            this._imageLoaded();\r\n        }.bind(this), false);\r\n        img.src = path;\r\n        var ob = {\r\n            img: img,\r\n            assetData: assetData\r\n        }\r\n        return ob;\r\n    }\r\n\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        var i, len = assets.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!assets[i].layers){\r\n                this.totalImages += 1;\r\n                this.images.push(this._createImageData(assets[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function getImage(assetData) {\r\n        var i = 0, len = this.images.length;\r\n        while (i < len) {\r\n            if (this.images[i].assetData === assetData) {\r\n                return this.images[i].img;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n        this.images.length = 0;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.totalImages === this.loadedAssets;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.loaded = loaded;\r\n        this.destroy = destroy;\r\n        this.getImage = getImage;\r\n        this._createImageData = createImageData;\r\n        this._imageLoaded = imageLoaded;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n        this.images = [];\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar assetLoader = (function(){\r\n\r\n\tfunction formatResponse(xhr) {\r\n\t\tif(xhr.response && typeof xhr.response === 'object') {\r\n\t\t\treturn xhr.response;\r\n\t\t} else if(xhr.response && typeof xhr.response === 'string') {\r\n\t\t\treturn JSON.parse(xhr.response);\r\n\t\t} else if(xhr.responseText) {\r\n\t\t\treturn JSON.parse(xhr.responseText);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadAsset(path, callback, errorCallback) {\r\n\t\tvar response;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', path, true);\r\n\t\t// set responseType after calling open or IE will break.\r\n\t\txhr.responseType = \"json\";\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t            \tresponse = formatResponse(xhr);\r\n\t            \tcallback(response);\r\n\t            }else{\r\n\t                try{\r\n\t            \t\tresponse = formatResponse(xhr);\r\n\t            \t\tcallback(response);\r\n\t                }catch(err){\r\n\t                \tif(errorCallback) {\r\n\t                \t\terrorCallback(err);\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t}\r\n\treturn {\r\n\t\tload: loadAsset\r\n\t}\r\n}())\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n    this.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = 0;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __complete: false\r\n\r\n\t};\r\n    this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyData = function(obj, data) {\r\n    for(var s in data) {\r\n        if(data.hasOwnProperty(s)) {\r\n            obj[s] = data[s];\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n    if(!data.__complete) {\r\n        this.completeTextData(data);\r\n    }\r\n    this.currentData = data;\r\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n    this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n    var currentValue = this.currentData;\r\n    var currentIndex = this.keysIndex;\r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n    for(i = 0; i < len; i += 1) {\r\n        //Checking if index changed to prevent creating a new object every time the expression updates.\r\n        if(currentIndex !== this.keysIndex) {\r\n            finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n        } else {\r\n            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n        }\r\n    }\r\n    if(currentValue !== finalValue) {\r\n        this.setCurrentData(finalValue);\r\n    }\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function() {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        this.keysIndex = i;\r\n    }\r\n    return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var charCode;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                charCode = finalText[i].charCodeAt(0);\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(charCode === 13 || charCode === 3){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        charCode = currentChar.charCodeAt(0);\r\n        if (currentChar === ' '){\r\n            val = '\\u00A0';\r\n        } else if (charCode === 13 || charCode === 3) {\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.copyData({}, this.data.d.k[index].s);\r\n    dData = this.copyData(dData, newData);\r\n    this.data.d.k[index].s = dData;\r\n    this.recalculate(index);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<0.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    }\r\n}\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n    this.rendererType = 'svg';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.setupGlobalData(animData, defs);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = createElementID();\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = createElementID();\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w || 0);\r\n            rect.setAttribute('height', this.element.comp.data.h || 0);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = createElementID();\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.createRenderableComponents();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = data.hd === true;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\r\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = createElementID();\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = createElementID();\r\n        var maskId = createElementID();\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\r\nfunction ShapeTransformManager() {\r\n\tthis.sequences = {};\r\n\tthis.sequenceList = [];\r\n    this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n\taddTransformSequence: function(transforms) {\r\n\t\tvar i, len = transforms.length;\r\n\t\tvar key = '_';\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tkey += transforms[i].transform.key + '_';\r\n\t\t}\r\n\t\tvar sequence = this.sequences[key];\r\n\t\tif(!sequence) {\r\n\t\t\tsequence = {\r\n\t\t\t\ttransforms: [].concat(transforms),\r\n\t\t\t\tfinalTransform: new Matrix(),\r\n\t\t\t\t_mdf: false\r\n\t\t\t};\r\n\t\t\tthis.sequences[key] = sequence;\r\n\t\t\tthis.sequenceList.push(sequence);\r\n\t\t}\r\n\t\treturn sequence;\r\n\t},\r\n\tprocessSequence: function(sequence, isFirstFrame) {\r\n\t\tvar i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;\r\n\t\twhile (i < len && !isFirstFrame) {\r\n\t\t\tif (sequence.transforms[i].transform.mProps._mdf) {\r\n\t\t\t\t_mdf = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 1\r\n\t\t}\r\n\t\tif (_mdf) {\r\n\t\t\tvar props;\r\n\t\t\tsequence.finalTransform.reset();\r\n\t\t\tfor (i = len - 1; i >= 0; i -= 1) {\r\n\t\t        props = sequence.transforms[i].transform.mProps.v.props;\r\n\t\t        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsequence._mdf = _mdf;\r\n\t\t\r\n\t},\r\n\tprocessSequences: function(isFirstFrame) {\r\n\t\tvar i, len = this.sequenceList.length;\r\n\t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\tthis.processSequence(this.sequenceList[i], isFirstFrame);\r\n\t\t}\r\n\r\n\t},\r\n\tgetNewKey: function() {\r\n\t\treturn '_' + this.transform_key_count++;\r\n\t}\r\n}\r\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = getBlendMode(this.data.bm);\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = createElementID();\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n    ,sourceRectAtTime: function(){}\r\n}\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = createElementID();\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = createElementID();\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n                /*var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);*/\r\n                ////\r\n                var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);\r\n                ////\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = createElementID();\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    createRenderableComponents: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'bevel'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while (i < len) {\r\n            if (elements[i].elem === elem) {\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i) {\r\n            i -= 1;\r\n            if (elements[i].elem === elem) {\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    //This iteration needs to be backwards because of how expressions connect between each other\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function() {\r\n\treturn this.sourceRect;\r\n}\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = !!this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape && tSpan) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        elementData.gr.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapesData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = createElementID();\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        while (elemChildren[0]) {\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = createElementID();\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var elements = this.elem.comp.elements;\r\n    var i = 0, len = elements.length;\r\n    while (i < len) {\r\n    \tif (elements[i] && elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = createElementID();\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n    var _isFrozen = false;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function getRegisteredAnimations() {\r\n        var i, len = registeredAnimations.length;\r\n        var animations = [];\r\n        for(i = 0; i < len; i += 1) {\r\n            animations.push(registeredAnimations[i].animation);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(playingAnimationsNum && !_isFrozen) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function activate(){\r\n        if(!_isFrozen && playingAnimationsNum){\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function freeze() {\r\n        _isFrozen = true;\r\n    }\r\n\r\n    function unfreeze() {\r\n        _isFrozen = false;\r\n        activate();\r\n    }\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    moduleOb.freeze = freeze;\r\n    moduleOb.unfreeze = unfreeze;\r\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = createElementID();\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this._completedLoop = false;\r\n    this.projectInterface = ProjectInterface();\r\n    this.imagePreloader = new ImagePreloader();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if(params.animationData){\r\n        this.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\r\n        assetLoader.load(params.path, this.configAnimation.bind(this), function() {\r\n            this.trigger('data_failed');\r\n        }.bind(this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.totalFrames;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {\r\n        this.trigger('data_failed');\r\n    }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.totalFrames;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function() {\r\n    this.trigger('loaded_images');\r\n    this.checkLoaded()\r\n}\r\n\r\nAnimationItem.prototype.preloadImages = function() {\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n}\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.preloadImages();\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    this.waitForFontsLoaded();\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function(){\r\n    if(!this.renderer) {\r\n        return;\r\n    }\r\n    if(this.renderer.globalData.fontManager.loaded()){\r\n        this.checkLoaded();\r\n    }else{\r\n        setTimeout(this.waitForFontsLoaded.bind(this),20);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\r\n        this.isLoaded = true;\r\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function() {\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this), 0);\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this._completedLoop = false;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this._completedLoop = true;\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                if(!this._completedLoop) {\r\n                    this._completedLoop = true;\r\n                } else {\r\n                    this.trigger('loopComplete');\r\n                }\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n    if (forceFlag) {\r\n        this.segments.length = 0;\r\n    }\r\n    if (typeof arr[0] === 'object') {\r\n        var i, len = arr.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.segments.push(arr[i]);\r\n        }\r\n    } else {\r\n        this.segments.push(arr);\r\n    }\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), 0);\r\n    }\r\n    if (this.isPaused) {\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if (forceFlag) {\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset) {\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if ((name && this.name != name) || !this.renderer) {\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.imagePreloader.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(assetData.e) {\r\n        path = assetData.p;\r\n    } else if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nfunction EffectsManager(){}\r\n\r\n    var lottiejs = {};\r\n\r\n    var _isFrozen = false;\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n\r\n    lottiejs.play = animationManager.play;\r\n    lottiejs.pause = animationManager.pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = animationManager.togglePause;\r\n    lottiejs.setSpeed = animationManager.setSpeed;\r\n    lottiejs.setDirection = animationManager.setDirection;\r\n    lottiejs.stop = animationManager.stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = animationManager.registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = animationManager.resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = animationManager.goToAndStop;\r\n    lottiejs.destroy = animationManager.destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.freeze = animationManager.freeze;\r\n    lottiejs.unfreeze = animationManager.unfreeze;\r\n    lottiejs.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.4.4';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\r\n"],
    "sourceRoot": ""
}